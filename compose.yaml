services:
  zookeeper:
   image: confluentinc/cp-zookeeper:latest
   container_name: zookeeper
   environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker-1
    depends_on:
       - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_MS: 10000
    
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker-1
    depends_on:
       - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_MS: 10000
  
  akhq:
    image: tchiotludo/akhq
    container_name: akhq
    ports:
      - "8080:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          server:
            access-log: true
          connections:
            kafka-cluster:
              properties:
                bootstrap.servers: "kafka:9092"
    depends_on:
      - kafka

  data-producer:
    build: 
      context: ./data-producer
      dockerfile: ./Dockerfile
    container_name: producer
    depends_on:
       - kafka
    volumes:
      - ./data-producer/gpx_files:/data-producer/gpx_files

  data-consumer:
    build: ./data-consumer
    container_name: consumer
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092

  influxdb2:
    image: influxdb:2
    container_name: influxdb
    volumes:
    #  - ./influxdb/data: 
      - /var/lib/influxdb2 # this is anonymous volume that gets deleted with each docker compose up
    #  - ./influxdb/config:
      - /etc/influxdb2 # this is anonymous volume that gets deleted with each docker compose up
      - ./secrets:/run/secrets
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME_FILE: /run/secrets/influxdb2-admin-username
      DOCKER_INFLUXDB_INIT_PASSWORD_FILE: /run/secrets/influxdb2-admin-password
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE: /run/secrets/influxdb2-admin-token
      DOCKER_INFLUXDB_INIT_ORG: my-org
      DOCKER_INFLUXDB_INIT_BUCKET: de-project
    ports:
      - "8086:8086"
    secrets:
      - influxdb2-admin-username
      - influxdb2-admin-password
      - influxdb2-admin-token

    # depends_on:
    #   - kafka  
  
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-data:/var/lib/grafana
    depends_on:
      - influxdb2

secrets:
  influxdb2-admin-username:
    file: ./secrets/.env.influxdb2-admin-username
  influxdb2-admin-password:
    file: ./secrets/.env.influxdb2-admin-password
  influxdb2-admin-token:
    file: ./secrets/.env.influxdb2-admin-token

